/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        combos {
                    compatible = "zmk,combos";

                    combo_btclr {
                        timeout-ms = <50>;
                        key-positions = <6 20>;
                        layers = <0>;
                        bindings = <&bt BT_CLR>;
                    };
                    combo_bt1 {
                        timeout-ms = <50>;
                        key-positions = <0 17>;
                        layers = <0>;
                        bindings = <&bt BT_SEL 0>;
                    };
                    combo_bt2 {
                        timeout-ms = <50>;
                        key-positions = <1 18>;
                        layers = <0>;
                        bindings = <&bt BT_SEL 1>;
                    };
                    combo_bt3 {
                        timeout-ms = <50>;
                        key-positions = <2 19>;
                        layers = <0>;
                        bindings = <&bt BT_SEL 2>;
                    };
                    combo_ESC {
                        timeout-ms = <50>;
                        key-positions = <6 16>;
                        layers = <0>;
                        bindings = <&kp ESC>;
                    };
                    combo_INS {
                        timeout-ms = <50>;
                        key-positions = <15 25>;
                        layers = <0>;
                        bindings = <&kp INS>;
                    };
                    combo_DEL {
                        timeout-ms = <50>;
                        key-positions = <25 30>;
                        layers = <0>;
                        bindings = <&kp DEL>;
                    };
                    combo_Z {
                        timeout-ms = <50>;
                        key-positions = <17 18>;
                        layers = <0>;
                        bindings = <&kp Z>;
                    };
                    combo_X {
                        timeout-ms = <50>;
                        key-positions = <18 19>;
                        layers = <0>;
                        bindings = <&kp X>;
                    };
                    combo_Q {
                        timeout-ms = <50>;
                        key-positions = <3 4>;
                        layers = <0>;
                        bindings = <&kp Q>;
                    };
                };

                behaviors {
                    hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <250>;
                        quick_tap_ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                    };
                };

                keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
//        |  D  |  R  |  W  |                      |  F  |  U  |  P  |
// |  A   |  S  |  H  |  T  |    B    |   |    J   |  N  |  E  |  O  |  I  |
// |  TAB |  M  |  C  |  V  |    G    |   |    Y   |  K  |  L  |  .  |  BS |
//                    |  ,  | CAPS/L1 |   | ENT/L2 | SPC |
                        bindings = <
               &kp D       &kp R        &kp W                               &kp F        &kp U        &kp P
   &hm LGUI A  &hm LALT S  &hm LSHFT H  &hm LCTRL T  &kp B        &kp J     &hm RCTRL N  &hm RSHFT E  &hm RALT O  &hm RGUI I
   &kp TAB     &kp M       &kp C        &kp V        &kp G        &kp Y     &kp K        &kp L        &kp DOT     &kp BSPC
                           &none        &kp COMMA    &lt 1 CAPS   &lt 2 RET &kp SPACE    &none
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
//        |  -_ |  +  |  =  |               |  /? |  \|  | '"  |
// |  1!  |  2@ |  3# |  4$ |  5% |   |  6^ |  7& |  8*  |  9( |  0) |
// |  F1  |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8  |  F9 | F10 |
//              |     |     |XXXXX|   | F11 | F12 |      |
                        bindings = <
                &kp MINUS    &kp PLUS      &kp EQUAL                         &kp FSLH      &kp BSLH      &kp SQT
   &hm LGUI N1  &hm LALT N2  &hm LSHFT N3  &hm LCTRL N4  &kp N5     &kp N6   &hm RCTRL N7  &hm RSHFT N8  &hm RALT N9  &hm RGUI N0
   &kp F1       &kp F2       &kp F3        &kp F4        &kp F5     &kp F6   &kp F7        &kp F8        &kp F9       &kp F10
                             &none         &none         &trans     &kp F11  &kp F12       &none
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
//        |  ~` |     |     |                | HOME  |  UP   |  END  |
// |  <   |  [  |  (  |  {  |      |   | PST | LEFT  | DOWN  | RIGHT | PGUP |
// |  >   |  ]  |  )  |  }  |  ;:  |   | CPY |  CUT  | UNDO  | REDO  | PGDN |
//                    |     |C/A/D |   |XXXXX| PSCRN |
                        bindings = <
           &kp GRAVE  &none           &none                                 &kp HOME   &kp UP     &kp END
   &kp LT  &kp LBKT   &hm LSHFT LPAR  &hm LCTRL LBRC  &none            &kp LC(V)  &kp LEFT   &kp DOWN   &kp RIGHT      &kp PG_UP
   &kp GT  &kp RBKT   &kp RPAR        &kp RBRC        &kp SEMI         &kp LC(C)  &kp LC(X)  &kp LC(Z)  &kp LC(LS(Z))  &kp PG_DN
                      &none           &none           &kp LC(LA(DEL))  &trans     &kp PSCRN  &none
                        >;
                };
        };
};
